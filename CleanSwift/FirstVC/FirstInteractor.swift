//
//  FirstInteractor.swift
//  CleanSwift
//
//  Created by Pháº¡m Thanh Háº£i on 28/11/2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by Lee Nguyen Templates which motivated by CleanSwift templates so
//  you can apply clean architecture to your iOS and Mac projects,

import UIKit

protocol FirstInteractorInput: FirstViewControllerOutput {

    
}

protocol FirstInteractorOutput : AnyObject {
    func presentSomething()
    func presentText(text: String)
    func presentSwapLang(firstLang: String, secondLang: String)
    func presentChoosedLang(lang: String, label: UILabel)
}

protocol FirstDataStore
{
  //var name: String { get set }
}


final class FirstInteractor: FirstDataStore {
    
    let output: FirstInteractorOutput
    let worker:FirstWorker
    
    init(output: FirstInteractorOutput, worker: FirstWorker = FirstWorker()) {
        self.output = output
        self.worker = worker
    }
    
    deinit {
        print("FirstInteractor \(#function)")
    }
    
}

extension FirstInteractor: FirstInteractorInput {
    func resquestSomethings() {
        
    }
    
    func requestGetText(textInput: String, s: String, t: String) {
        let firstLang: String = convertLang(lang: s)
        let secondLang: String = convertLang(lang: t)
        
        self.worker.getTextResultFromAPI(text: textInput, s: firstLang, t: secondLang) { text in
            DispatchQueue.main.async {
                self.output.presentText(text: text ?? "")
            }
            
        }
    }
    
    func requestSwapLang(firstLang: String, secondLang: String) {
        self.output.presentSwapLang(firstLang: secondLang, secondLang: firstLang)
    }
    
    func requestLangChoosed(lable: UILabel, lang: String) {
        self.output.presentChoosedLang(lang: lang, label: lable)
    }
    
    func convertLang(lang: String) -> String {
        switch lang {
        case "Afrikaans":
            return "af"
        case "Albanian":
            return "sq"
        case "Arabic":
            return "ar"
        case "Armenian":
            return "hy"
        case "Bengali":
            return "bn"
        case "Bulgarian":
            return "bg"
        case "Chinese":
            return "zh"
        case "Croatian":
            return "hr"
        case "Czech":
            return "cs"
        case "Danish":
            return "da"
        case "Dutch":
            return "nl"
        case "English":
            return "en"
        case "Estonian":
            return "et"
        case "Finnish":
            return "fi"
        case "French":
            return "fr"
        case "Georgian":
            return "ka"
        case "German":
            return "de"
        case "Greek":
            return "el"
        case "Gujarati":
            return "gu"
        case "Hebrew":
            return "he"
        case "Hindi":
            return "hi"
        case "Hungarian":
            return "hu"
        case "Indonesian":
            return "id"
        case "Italian":
            return "it"
        case "Japanese":
            return "ja"
        case "Kannada":
            return "kn"
        case "Kazakh":
            return "kk"
        case "Korean":
            return "ko"
        case "Latvian":
            return "lv"
        case "Lithuanian":
            return "lt"
        case "Macedonian":
            return "mk"
        case "Malay":
            return "ms"
        case "Malayalam":
            return "ml"
        case "Marathi":
            return "mr"
        case "Mongolian":
            return "mn"
        case "Nepali":
            return "ne"
        case "Norwegian":
            return "no"
        case "Persian":
            return "fa"
        case "Polish":
            return "pl"
        case "Portuguese":
            return "pt"
        case "Punjabi":
            return "pa"
        case "Romanian":
            return "ro"
        case "Russian":
            return "ru"
        case "Serbian":
            return "sr"
        case "Slovak":
            return "sk"
        case "Slovenian":
            return "sl"
        case "Spanish":
            return "es"
        case "Swahili":
            return "sw"
        case "Swedish":
            return "sv"
        case "Tamil":
            return "ta"
        case "Telugu":
            return "te"
        case "Thai":
            return "th"
        case "Turkish":
            return "tr"
        case "Ukrainian":
            return "uk"
        case "Urdu":
            return "ur"
        case "Vietnamese":
            return "vi"
        default:
            return ""
        }
    }

}
